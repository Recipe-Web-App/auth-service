---
openapi: 3.1.0
info:
  title: OAuth2 Authentication Service
  description: |
    Enterprise-grade OAuth2 authentication service supporting Authorization Code Flow with PKCE
    and Client Credentials Flow for service-to-service authentication.

    This service provides secure token-based authentication with JWT access tokens,
    opaque refresh tokens, and comprehensive security features including rate limiting,
    CORS support, and Redis-based session management.
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://auth.example.com
    description: Production server

security:
  - BearerAuth: []
  - ClientCredentials: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service and its dependencies
      operationId: healthCheck
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health/ready:
    get:
      summary: Readiness check endpoint
      description: Returns whether the service is ready to accept requests
      operationId: readinessCheck
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'
        '503':
          description: Service is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      summary: Prometheus metrics endpoint
      description: Returns Prometheus metrics for monitoring
      operationId: getMetrics
      tags:
        - Monitoring
      security: []
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string

  /oauth2/authorize:
    get:
      summary: OAuth2 authorization endpoint
      description: |
        Initiates the OAuth2 Authorization Code Flow with PKCE.
        This endpoint redirects the user to authenticate and authorize the client application.
      operationId: authorize
      tags:
        - OAuth2
      security: []
      parameters:
        - name: response_type
          in: query
          required: true
          description: Must be "code" for authorization code flow
          schema:
            type: string
            enum: [code]
        - name: client_id
          in: query
          required: true
          description: The client identifier
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          description: The client redirect URI
          schema:
            type: string
            format: uri
        - name: scope
          in: query
          description: The requested scope(s)
          schema:
            type: string
        - name: state
          in: query
          description: An opaque value to prevent CSRF attacks
          schema:
            type: string
        - name: code_challenge
          in: query
          required: true
          description: PKCE code challenge
          schema:
            type: string
        - name: code_challenge_method
          in: query
          description: PKCE code challenge method
          schema:
            type: string
            enum: [S256]
            default: S256
      responses:
        '302':
          description: Redirect to client with authorization code or error
          headers:
            Location:
              description: Redirect URI with code or error parameters
              schema:
                type: string
                format: uri
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  /oauth2/token:
    post:
      summary: OAuth2 token endpoint
      description: |
        Exchanges authorization codes for tokens or performs client credentials flow.
        Supports both Authorization Code Flow and Client Credentials Flow.
      operationId: token
      tags:
        - OAuth2
      security: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AuthorizationCodeRequest'
                - $ref: '#/components/schemas/ClientCredentialsRequest'
                - $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  /oauth2/introspect:
    post:
      summary: Token introspection endpoint
      description: Returns metadata about a token including its validity and associated claims
      operationId: introspect
      tags:
        - OAuth2
      security:
        - ClientCredentials: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntrospectRequest'
      responses:
        '200':
          description: Token introspection response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntrospectResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  /oauth2/revoke:
    post:
      summary: Token revocation endpoint
      description: Revokes an access token or refresh token
      operationId: revoke
      tags:
        - OAuth2
      security:
        - ClientCredentials: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RevokeRequest'
      responses:
        '200':
          description: Token revoked successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  /oauth2/userinfo:
    get:
      summary: User information endpoint
      description: Returns information about the authenticated user
      operationId: userInfo
      tags:
        - OAuth2
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ClientCredentials:
      type: http
      scheme: basic

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        checks:
          type: object
          properties:
            redis:
              type: string
              enum: [up, down]
        version:
          type: string
      required:
        - status
        - timestamp

    ReadinessResponse:
      type: object
      properties:
        ready:
          type: boolean
        timestamp:
          type: string
          format: date-time
      required:
        - ready
        - timestamp

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - error
        - message
        - timestamp

    OAuth2Error:
      type: object
      properties:
        error:
          type: string
          enum:
            - invalid_request
            - invalid_client
            - invalid_grant
            - unauthorized_client
            - unsupported_grant_type
            - invalid_scope
            - access_denied
            - unsupported_response_type
            - server_error
            - temporarily_unavailable
        error_description:
          type: string
        error_uri:
          type: string
          format: uri
        state:
          type: string
      required:
        - error

    AuthorizationCodeRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum: [authorization_code]
        code:
          type: string
        redirect_uri:
          type: string
          format: uri
        client_id:
          type: string
        code_verifier:
          type: string
      required:
        - grant_type
        - code
        - redirect_uri
        - client_id
        - code_verifier

    ClientCredentialsRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum: [client_credentials]
        scope:
          type: string
      required:
        - grant_type

    RefreshTokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum: [refresh_token]
        refresh_token:
          type: string
        scope:
          type: string
      required:
        - grant_type
        - refresh_token

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The access token (JWT format)
        token_type:
          type: string
          enum: [Bearer]
        expires_in:
          type: integer
          description: Access token lifetime in seconds
        refresh_token:
          type: string
          description: The refresh token (opaque format)
        scope:
          type: string
          description: The granted scope(s)
      required:
        - access_token
        - token_type
        - expires_in

    IntrospectRequest:
      type: object
      properties:
        token:
          type: string
        token_type_hint:
          type: string
          enum: [access_token, refresh_token]
      required:
        - token

    IntrospectResponse:
      type: object
      properties:
        active:
          type: boolean
        scope:
          type: string
        client_id:
          type: string
        sub:
          type: string
        exp:
          type: integer
        iat:
          type: integer
        aud:
          type: array
          items:
            type: string
      required:
        - active

    RevokeRequest:
      type: object
      properties:
        token:
          type: string
        token_type_hint:
          type: string
          enum: [access_token, refresh_token]
      required:
        - token

    UserInfo:
      type: object
      properties:
        sub:
          type: string
          description: Subject identifier
        email:
          type: string
          format: email
        name:
          type: string
        preferred_username:
          type: string
      required:
        - sub

tags:
  - name: Health
    description: Health and readiness endpoints
  - name: Monitoring
    description: Monitoring and metrics endpoints
  - name: OAuth2
    description: OAuth2 authentication and authorization endpoints
