name: License Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'go.mod'
      - 'go.sum'
  schedule:
    # Run monthly on the 1st at 6 AM UTC
    - cron: '0 6 1 * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  GO_VERSION: '1.24'

jobs:
  license-check:
    name: Check Dependency Licenses
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install go-licenses
      run: go install github.com/google/go-licenses@latest

    - name: Check licenses
      id: check
      run: |
        # List all licenses
        echo "## License Report" > license-report.md
        echo "" >> license-report.md

        go-licenses report ./... --template=.github/licenses.tpl > licenses.csv 2>&1 || true

        # Check for restricted licenses
        RESTRICTED_LICENSES="GPL-3.0 AGPL-3.0 LGPL-3.0"
        VIOLATIONS=""

        for license in $RESTRICTED_LICENSES; do
          if go-licenses check ./... 2>&1 | grep -i "$license"; then
            VIOLATIONS="${VIOLATIONS}${license} "
          fi
        done

        if [ -n "$VIOLATIONS" ]; then
          echo "violations=$VIOLATIONS" >> $GITHUB_OUTPUT
          echo "status=failed" >> $GITHUB_OUTPUT
        else
          echo "status=passed" >> $GITHUB_OUTPUT
        fi

    - name: Generate license summary
      run: |
        echo "# Dependency License Summary" > license-summary.md
        echo "" >> license-summary.md
        echo "Generated: $(date)" >> license-summary.md
        echo "" >> license-summary.md

        go-licenses csv ./... 2>/dev/null | awk -F',' '{print $2}' | sort | uniq -c | sort -rn >> license-summary.md || true

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          license-summary.md
          licenses.csv
        retention-days: 90

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: licenses
        message: |
          ## 📜 License Compliance Check

          **Status:** ${{ steps.check.outputs.status == 'passed' && '✅ Passed' || '❌ Failed' }}

          ${{ steps.check.outputs.violations && format('**⚠️ Restricted licenses found:** {0}', steps.check.outputs.violations) || '✅ No restricted licenses found' }}

          **Blocked licenses:** GPL-3.0, AGPL-3.0, LGPL-3.0

          <details>
          <summary>View license summary</summary>

          $(cat license-summary.md)

          </details>

    - name: Fail if violations found
      if: steps.check.outputs.status == 'failed'
      run: |
        echo "❌ Restricted licenses found: ${{ steps.check.outputs.violations }}"
        exit 1
